[2020-11-06 23:16:59,650] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-11-06 23:19:36,025] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-11-06 23:19:36,037] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2020-11-06 23:19:36,037] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2020-11-06 23:19:36,039] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2020-11-06 23:19:36,045] INFO [Controller id=0] Epoch incremented to 1 (kafka.controller.KafkaController)
[2020-11-06 23:19:36,045] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-11-06 23:19:36,047] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-11-06 23:19:36,049] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-11-06 23:19:36,050] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-11-06 23:19:36,081] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-11-06 23:19:36,088] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-11-06 23:19:36,093] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-11-06 23:19:36,094] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2020-11-06 23:19:36,094] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-11-06 23:19:36,095] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-11-06 23:19:36,095] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-11-06 23:19:36,095] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-11-06 23:19:36,097] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-11-06 23:19:36,097] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-11-06 23:19:36,098] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-11-06 23:19:36,098] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-11-06 23:19:36,104] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2020-11-06 23:19:36,105] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2020-11-06 23:19:36,111] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-11-06 23:19:36,112] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ReplicaStateMachine)
[2020-11-06 23:19:36,112] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2020-11-06 23:19:36,113] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2020-11-06 23:19:36,114] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.PartitionStateMachine)
[2020-11-06 23:19:36,115] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-11-06 23:19:36,118] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-11-06 23:19:36,118] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-11-06 23:19:36,118] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-11-06 23:19:36,119] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-11-06 23:19:36,119] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-11-06 23:19:36,123] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-11-06 23:19:41,128] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-11-06 23:19:41,131] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-11-06 23:24:41,142] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-11-06 23:24:41,144] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-11-06 23:24:58,234] INFO [Controller id=0] New topics: [Set(post_book)], deleted topics: [Set()], new partition replica assignment [Map(post_book-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:24:58,236] INFO [Controller id=0] New partition creation callback for post_book-0 (kafka.controller.KafkaController)
[2020-11-06 23:26:50,787] DEBUG [Controller id=0] Delete topics listener fired for topics post_book to be deleted (kafka.controller.KafkaController)
[2020-11-06 23:26:50,789] INFO [Controller id=0] Starting topic deletion for topics post_book (kafka.controller.KafkaController)
[2020-11-06 23:26:50,790] INFO [Topic Deletion Manager 0], Handling deletion for topics post_book (kafka.controller.TopicDeletionManager)
[2020-11-06 23:26:50,793] INFO [Topic Deletion Manager 0], Deletion of topic post_book (re)started (kafka.controller.TopicDeletionManager)
[2020-11-06 23:26:50,793] INFO [Topic Deletion Manager 0], Topic deletion callback for post_book (kafka.controller.TopicDeletionManager)
[2020-11-06 23:26:50,795] INFO [Topic Deletion Manager 0], Partition deletion callback for post_book-0 (kafka.controller.TopicDeletionManager)
[2020-11-06 23:26:50,805] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-11-06 23:26:50,805] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=post_book,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-11-06 23:26:50,806] DEBUG [Topic Deletion Manager 0], Deletion started for replicas [Topic=post_book,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-11-06 23:26:50,808] DEBUG The stop replica request (delete = true) sent to broker 0 is [Topic=post_book,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2020-11-06 23:26:50,808] DEBUG The stop replica request (delete = false) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2020-11-06 23:26:50,821] DEBUG [Controller id=0] Delete topic callback invoked for org.apache.kafka.common.requests.StopReplicaResponse@4413a5ce (kafka.controller.KafkaController)
[2020-11-06 23:26:50,822] DEBUG [Topic Deletion Manager 0], Deletion successfully completed for replicas [Topic=post_book,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-11-06 23:26:50,823] INFO [Topic Deletion Manager 0], Handling deletion for topics post_book (kafka.controller.TopicDeletionManager)
[2020-11-06 23:26:50,837] INFO [Topic Deletion Manager 0], Deletion of topic post_book successfully completed (kafka.controller.TopicDeletionManager)
[2020-11-06 23:26:50,838] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-11-06 23:26:50,838] DEBUG [Controller id=0] Delete topics listener fired for topics  to be deleted (kafka.controller.KafkaController)
[2020-11-06 23:29:41,128] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-11-06 23:29:41,129] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-11-06 23:30:45,227] INFO [Controller id=0] New topics: [Set(post_book)], deleted topics: [Set()], new partition replica assignment [Map(post_book-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:30:45,228] INFO [Controller id=0] New partition creation callback for post_book-0 (kafka.controller.KafkaController)
[2020-11-06 23:34:41,142] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-11-06 23:34:41,145] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(post_book-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-11-06 23:34:41,150] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-11-06 23:34:41,151] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-11-06 23:38:53,093] INFO [Controller id=0] New topics: [Set(loginUser)], deleted topics: [Set()], new partition replica assignment [Map(loginUser-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:38:53,094] INFO [Controller id=0] New partition creation callback for loginUser-0 (kafka.controller.KafkaController)
[2020-11-06 23:38:55,651] INFO [Controller id=0] New topics: [Set(loginOwner)], deleted topics: [Set()], new partition replica assignment [Map(loginOwner-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:38:55,651] INFO [Controller id=0] New partition creation callback for loginOwner-0 (kafka.controller.KafkaController)
[2020-11-06 23:38:58,211] INFO [Controller id=0] New topics: [Set(SignUpUser)], deleted topics: [Set()], new partition replica assignment [Map(SignUpUser-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:38:58,211] INFO [Controller id=0] New partition creation callback for SignUpUser-0 (kafka.controller.KafkaController)
[2020-11-06 23:39:00,745] INFO [Controller id=0] New topics: [Set(SignUpOwner)], deleted topics: [Set()], new partition replica assignment [Map(SignUpOwner-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:39:00,745] INFO [Controller id=0] New partition creation callback for SignUpOwner-0 (kafka.controller.KafkaController)
[2020-11-06 23:39:03,275] INFO [Controller id=0] New topics: [Set(OwnerProfile)], deleted topics: [Set()], new partition replica assignment [Map(OwnerProfile-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:39:03,276] INFO [Controller id=0] New partition creation callback for OwnerProfile-0 (kafka.controller.KafkaController)
[2020-11-06 23:39:05,856] INFO [Controller id=0] New topics: [Set(UserProfile)], deleted topics: [Set()], new partition replica assignment [Map(UserProfile-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:39:05,856] INFO [Controller id=0] New partition creation callback for UserProfile-0 (kafka.controller.KafkaController)
[2020-11-06 23:39:08,391] INFO [Controller id=0] New topics: [Set(GetUserProfile)], deleted topics: [Set()], new partition replica assignment [Map(GetUserProfile-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:39:08,391] INFO [Controller id=0] New partition creation callback for GetUserProfile-0 (kafka.controller.KafkaController)
[2020-11-06 23:39:10,997] INFO [Controller id=0] New topics: [Set(GetOwnerProfile)], deleted topics: [Set()], new partition replica assignment [Map(GetOwnerProfile-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:39:10,998] INFO [Controller id=0] New partition creation callback for GetOwnerProfile-0 (kafka.controller.KafkaController)
[2020-11-06 23:39:13,655] INFO [Controller id=0] New topics: [Set(UserDashboard)], deleted topics: [Set()], new partition replica assignment [Map(UserDashboard-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:39:13,655] INFO [Controller id=0] New partition creation callback for UserDashboard-0 (kafka.controller.KafkaController)
[2020-11-06 23:39:16,213] INFO [Controller id=0] New topics: [Set(GetMenu)], deleted topics: [Set()], new partition replica assignment [Map(GetMenu-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:39:16,213] INFO [Controller id=0] New partition creation callback for GetMenu-0 (kafka.controller.KafkaController)
[2020-11-06 23:39:18,848] INFO [Controller id=0] New topics: [Set(updateMenu)], deleted topics: [Set()], new partition replica assignment [Map(updateMenu-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:39:18,848] INFO [Controller id=0] New partition creation callback for updateMenu-0 (kafka.controller.KafkaController)
[2020-11-06 23:39:21,393] INFO [Controller id=0] New topics: [Set(Orders)], deleted topics: [Set()], new partition replica assignment [Map(Orders-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:39:21,393] INFO [Controller id=0] New partition creation callback for Orders-0 (kafka.controller.KafkaController)
[2020-11-06 23:39:23,946] INFO [Controller id=0] New topics: [Set(getOwnerOrders)], deleted topics: [Set()], new partition replica assignment [Map(getOwnerOrders-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:39:23,946] INFO [Controller id=0] New partition creation callback for getOwnerOrders-0 (kafka.controller.KafkaController)
[2020-11-06 23:39:26,498] INFO [Controller id=0] New topics: [Set(getUserOrders)], deleted topics: [Set()], new partition replica assignment [Map(getUserOrders-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:39:26,498] INFO [Controller id=0] New partition creation callback for getUserOrders-0 (kafka.controller.KafkaController)
[2020-11-06 23:39:29,157] INFO [Controller id=0] New topics: [Set(updateStatus)], deleted topics: [Set()], new partition replica assignment [Map(updateStatus-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:39:29,158] INFO [Controller id=0] New partition creation callback for updateStatus-0 (kafka.controller.KafkaController)
[2020-11-06 23:39:31,952] INFO [Controller id=0] New topics: [Set(addMessage)], deleted topics: [Set()], new partition replica assignment [Map(addMessage-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:39:31,952] INFO [Controller id=0] New partition creation callback for addMessage-0 (kafka.controller.KafkaController)
[2020-11-06 23:39:34,971] INFO [Controller id=0] New topics: [Set(getMessage)], deleted topics: [Set()], new partition replica assignment [Map(getMessage-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:39:34,971] INFO [Controller id=0] New partition creation callback for getMessage-0 (kafka.controller.KafkaController)
[2020-11-06 23:39:41,161] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-11-06 23:39:41,162] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(addMessage-0 -> Vector(0), Orders-0 -> Vector(0), post_book-0 -> Vector(0), getOwnerOrders-0 -> Vector(0), UserProfile-0 -> Vector(0), UserDashboard-0 -> Vector(0), SignUpOwner-0 -> Vector(0), OwnerProfile-0 -> Vector(0), loginOwner-0 -> Vector(0), GetOwnerProfile-0 -> Vector(0), SignUpUser-0 -> Vector(0), loginUser-0 -> Vector(0), updateMenu-0 -> Vector(0), GetUserProfile-0 -> Vector(0), getMessage-0 -> Vector(0), GetMenu-0 -> Vector(0), getUserOrders-0 -> Vector(0), updateStatus-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-11-06 23:39:41,162] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-11-06 23:39:41,162] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-11-06 23:44:41,175] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-11-06 23:44:41,178] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(addMessage-0 -> Vector(0), Orders-0 -> Vector(0), post_book-0 -> Vector(0), getOwnerOrders-0 -> Vector(0), UserProfile-0 -> Vector(0), UserDashboard-0 -> Vector(0), SignUpOwner-0 -> Vector(0), OwnerProfile-0 -> Vector(0), loginOwner-0 -> Vector(0), GetOwnerProfile-0 -> Vector(0), SignUpUser-0 -> Vector(0), loginUser-0 -> Vector(0), updateMenu-0 -> Vector(0), GetUserProfile-0 -> Vector(0), getMessage-0 -> Vector(0), GetMenu-0 -> Vector(0), getUserOrders-0 -> Vector(0), updateStatus-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-11-06 23:44:41,178] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-11-06 23:44:41,178] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-11-06 23:49:41,189] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-11-06 23:49:41,192] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(addMessage-0 -> Vector(0), Orders-0 -> Vector(0), post_book-0 -> Vector(0), getOwnerOrders-0 -> Vector(0), UserProfile-0 -> Vector(0), UserDashboard-0 -> Vector(0), SignUpOwner-0 -> Vector(0), OwnerProfile-0 -> Vector(0), loginOwner-0 -> Vector(0), GetOwnerProfile-0 -> Vector(0), SignUpUser-0 -> Vector(0), loginUser-0 -> Vector(0), updateMenu-0 -> Vector(0), GetUserProfile-0 -> Vector(0), getMessage-0 -> Vector(0), GetMenu-0 -> Vector(0), getUserOrders-0 -> Vector(0), updateStatus-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-11-06 23:49:41,192] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-11-06 23:49:41,193] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-11-06 23:54:41,217] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-11-06 23:54:41,219] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(addMessage-0 -> Vector(0), Orders-0 -> Vector(0), post_book-0 -> Vector(0), getOwnerOrders-0 -> Vector(0), UserProfile-0 -> Vector(0), UserDashboard-0 -> Vector(0), SignUpOwner-0 -> Vector(0), OwnerProfile-0 -> Vector(0), loginOwner-0 -> Vector(0), GetOwnerProfile-0 -> Vector(0), SignUpUser-0 -> Vector(0), loginUser-0 -> Vector(0), updateMenu-0 -> Vector(0), GetUserProfile-0 -> Vector(0), getMessage-0 -> Vector(0), GetMenu-0 -> Vector(0), getUserOrders-0 -> Vector(0), updateStatus-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-11-06 23:54:41,220] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-11-06 23:54:41,220] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-11-06 23:55:38,578] INFO [Controller id=0] New topics: [Set(response_topic)], deleted topics: [Set()], new partition replica assignment [Map(response_topic-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-11-06 23:55:38,579] INFO [Controller id=0] New partition creation callback for response_topic-0 (kafka.controller.KafkaController)
[2020-11-06 23:55:38,585] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-11-06 23:59:41,226] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-11-06 23:59:41,228] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(addMessage-0 -> Vector(0), Orders-0 -> Vector(0), post_book-0 -> Vector(0), getOwnerOrders-0 -> Vector(0), UserProfile-0 -> Vector(0), UserDashboard-0 -> Vector(0), SignUpOwner-0 -> Vector(0), OwnerProfile-0 -> Vector(0), loginOwner-0 -> Vector(0), GetOwnerProfile-0 -> Vector(0), SignUpUser-0 -> Vector(0), loginUser-0 -> Vector(0), updateMenu-0 -> Vector(0), getMessage-0 -> Vector(0), GetUserProfile-0 -> Vector(0), GetMenu-0 -> Vector(0), updateStatus-0 -> Vector(0), getUserOrders-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-11-06 23:59:41,228] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-11-06 23:59:41,229] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
